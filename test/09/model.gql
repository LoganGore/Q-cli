type Schema {
  types: [Type!]!
  queryType: Type!
  mutationType: Type
  subscriptionType: Type
  directives: [Directive!]!
}

type Type {
  kind: TypeKind!
  name: String
  description: String

  # OBJECT and INTERFACE only
  fields(includeDeprecated: Boolean = false): [Field!]

  # OBJECT only
  interfaces: [Type!]

  # INTERFACE and UNION only
  possibleTypes: [Type!]

  # ENUM only
  enumValues(includeDeprecated: Boolean = false): [EnumValue!]

  # INPUT_OBJECT only
  inputFields: [InputValue!]

  # NON_NULL and LIST only
  ofType: Type
}

type Field {
  name: String!
  description: String
  args: [InputValue!]!
  type: Type!
  isDeprecated: Boolean!
  deprecationReason: String
}

type InputValue {
  name: String!
  description: String
  type: Type!
  defaultValue: String
}

type EnumValue {
  name: String!
  description: String
  isDeprecated: Boolean!
  deprecationReason: String
}

enum TypeKind {
  SCALAR
  OBJECT
  INTERFACE
  UNION
  ENUM
  INPUT_OBJECT
  LIST
  NON_NULL
}

type Directive {
  name: String!
  description: String
  locations: [DirectiveLocation!]!
  args: [InputValue!]!
}

enum DirectiveLocation {
  QUERY
  MUTATION
  SUBSCRIPTION
  FIELD
  FRAGMENT_DEFINITION
  FRAGMENT_SPREAD
  INLINE_FRAGMENT
  SCHEMA
  SCALAR
  OBJECT
  FIELD_DEFINITION
  ARGUMENT_DEFINITION
  INTERFACE
  UNION
  ENUM
  ENUM_VALUE
  INPUT_OBJECT
  INPUT_FIELD_DEFINITION
}
